[{"/home/mahin/projects/go-react/client/src/index.js":"1","/home/mahin/projects/go-react/client/src/reportWebVitals.js":"2","/home/mahin/projects/go-react/client/src/App.js":"3","/home/mahin/projects/go-react/client/src/components/SignUp.js":"4","/home/mahin/projects/go-react/client/src/components/SignIn.js":"5","/home/mahin/projects/go/food-ordering-system-example/client/src/index.js":"6","/home/mahin/projects/go/food-ordering-system-example/client/src/reportWebVitals.js":"7","/home/mahin/projects/go/food-ordering-system-example/client/src/App.js":"8","/home/mahin/projects/go/food-ordering-system-example/client/src/components/SignUp.js":"9","/home/mahin/projects/go/food-ordering-system-example/client/src/components/SignIn.js":"10","/home/mahin/projects/go/food-ordering-system-example/client/src/components/Manage.js":"11","/home/mahin/projects/go/food-ordering-system-example/client/src/components/ManagerReg.js":"12","/home/mahin/projects/go/food-ordering-system-example/client/src/components/Menu.js":"13","/home/mahin/projects/go/food-ordering-system-example/client/src/components/Home.js":"14","/home/mahin/projects/go/food-ordering-system-example/client/src/components/Checkout.js":"15","/home/mahin/projects/go/food-ordering-system-example/client/src/components/Styles.js":"16","/home/mahin/projects/go/food-ordering-system-example/client/src/components/Display.js":"17"},{"size":500,"mtime":1620512332654,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1620512332654,"results":"20","hashOfConfig":"19"},{"size":389,"mtime":1620647745425,"results":"21","hashOfConfig":"19"},{"size":4412,"mtime":1620647291562,"results":"22","hashOfConfig":"19"},{"size":3123,"mtime":1620647800841,"results":"23","hashOfConfig":"19"},{"size":500,"mtime":1621080496411,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1621080496411,"results":"26","hashOfConfig":"25"},{"size":879,"mtime":1621501555383,"results":"27","hashOfConfig":"25"},{"size":3658,"mtime":1621495597176,"results":"28","hashOfConfig":"25"},{"size":3177,"mtime":1621496546417,"results":"29","hashOfConfig":"25"},{"size":1512,"mtime":1621512614542,"results":"30","hashOfConfig":"25"},{"size":2890,"mtime":1621445804818,"results":"31","hashOfConfig":"25"},{"size":86,"mtime":1621432643247,"results":"32","hashOfConfig":"25"},{"size":844,"mtime":1621502192461,"results":"33","hashOfConfig":"25"},{"size":1681,"mtime":1621513152618,"results":"34","hashOfConfig":"25"},{"size":533,"mtime":1621241078807,"results":"35","hashOfConfig":"25"},{"size":2495,"mtime":1621502435281,"results":"36","hashOfConfig":"25"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"1wi9ar5",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fpcwy",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},"/home/mahin/projects/go-react/client/src/index.js",[],["80","81"],"/home/mahin/projects/go-react/client/src/reportWebVitals.js",[],"/home/mahin/projects/go-react/client/src/App.js",["82"],"import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport SignUp from './components/SignUp';\nimport SignIn from './components/SignIn';\n\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n          <Route path=\"/\" exact component={SignUp}/>\n          <Route path=\"/signin\" component={SignIn}/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/mahin/projects/go-react/client/src/components/SignUp.js",[],"/home/mahin/projects/go-react/client/src/components/SignIn.js",[],"/home/mahin/projects/go/food-ordering-system-example/client/src/index.js",[],"/home/mahin/projects/go/food-ordering-system-example/client/src/reportWebVitals.js",[],"/home/mahin/projects/go/food-ordering-system-example/client/src/App.js",["83","84"],"import {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport SignUp from './components/SignUp';\nimport ManagerReg from './components/ManagerReg';\nimport { SignIn, data } from './components/SignIn';\nimport Home from './components/Home';\nimport Manage from './components/Manage';\nimport Menu from './components/Menu';\nimport Checkout from './components/Checkout';\n\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n          <Route path='/admin' component = {ManagerReg}/>\n          <Route path=\"/\" exact component={SignUp}/>\n          <Route path=\"/signin\" component={SignIn}/>\n          <Route path=\"/home\" component={Home}/>\n          <Route path=\"/manage\" component={Manage}/>\n          <Route path=\"/menu\" component={Menu}/>\n          <Route path=\"/checkout\" component={Checkout}/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/home/mahin/projects/go/food-ordering-system-example/client/src/components/SignUp.js",["85","86"],"import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { useForm } from 'react-hook-form';\nimport useStyles from './Styles';\n\n\nconst onSubmit = (data) => {\n    fetch(\"http://localhost:8080/signup\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    })\n    console.log(JSON.stringify(data))\n}\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const { register, handleSubmit } = useForm();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit(onSubmit)}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                {...register('firstName')}\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                {...register('lastName')}\n                id=\"lastName\"\n                label=\"Last Name\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                {...register('email')}\n                id=\"email\"\n                label=\"Email Address\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                {...register('password')}\n                fullWidth\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormControlLabel\n                required\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                label=\"I understand, this website can not delivery my food.\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"signin\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}","/home/mahin/projects/go/food-ordering-system-example/client/src/components/SignIn.js",["87","88"],"import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './Styles';\n\n\n\nexport function SignIn() {\n  const classes = useStyles();\n  const { register, handleSubmit } = useForm();\n  let history = useHistory()\n  let user = {}\n\n  const onSubmit = (data) => {\n\n    fetch(\"http://localhost:8080/signin\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(data => {\n      console.log(data)\n      if (data.isManager === \"true\"){\n        history.push({\n          pathname: \"/manage\",\n          state: {details: data}\n        })\n      }else{\n        localStorage.setItem(\"user_name\", data.firstName)\n        localStorage.setItem(\"user_id\", data.id)\n        history.push({\n          pathname: '/home',\n          state: {detail: data.firstName}\n        })\n      }\n    })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            {...register('email')}\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            {...register('password')}\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"true\" name=\"isManager\" {...register('isManager')} color=\"primary\" />}\n            label=\"Sign me in as admin\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n","/home/mahin/projects/go/food-ordering-system-example/client/src/components/Manage.js",["89","90","91","92","93","94"],"import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport { Container, Typography, Button, Card, Grid, CardContent, CardActions } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function Manage() {\n  const classes = useStyles();\n  const { register, handleSubmit } = useForm();\n  const food = []\n\n\n\n  const onSubmit = (data) => {\n      fetch(\"http://localhost:8080/add/food\",{\n          method:\"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n      })\n      .then(res => res.json())\n      .then(data => { \n          console.log(data)\n          alert(\"Added\")\n      })\n  }\n\n\n  return (\n    <Container>\n        <Typography>Add today's menu:</Typography>\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n            <Input placeholder=\"eg:burger\" name=\"title\" {...register('title')} inputProps={{ 'aria-label': 'description' }} />\n            <Input placeholder=\"eg:100৳\" name=\"price\" {...register('price')} inputProps={{ 'aria-label': 'description' }} />\n            <Button\n                type=\"submit\"\n                variant=\"contained\"\n              >\n            Add\n          </Button>\n        </form>\n    </Container>\n  );\n}\n","/home/mahin/projects/go/food-ordering-system-example/client/src/components/ManagerReg.js",["95","96","97","98"],"import {FormControlLabel, Avatar, Button, CssBaseline, TextField, Checkbox, Link, Grid, Box, Typography, Container} from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { makeStyles, responsiveFontSizes } from '@material-ui/core/styles';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './Styles';\n\n  \n  export default function SignIn() {\n    const classes = useStyles();\n    const { register, handleSubmit } = useForm();\n    const history = useHistory()\n    \n    const onSubmit = (data) => {\n        fetch(\"http://localhost:8080/admin/register\",{\n          method: \"POST\",\n          headers: {'Content-Type': \"application/json\"},\n          body: JSON.stringify(data)\n        })\n        .then(response => response.json())\n        .then(data => {\n          console.log(data)\n          history.push({\n            pathname:\"/manage\",\n            state: {details: data}\n          })\n        })\n    }\n  \n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Admin Registration\n          </Typography>\n          <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              {...register('email')}\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              {...register('password')}\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Register\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link href=\"/signin\" variant=\"body2\">\n                  {\"Already have an account? Sign in\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n","/home/mahin/projects/go/food-ordering-system-example/client/src/components/Menu.js",[],"/home/mahin/projects/go/food-ordering-system-example/client/src/components/Home.js",["99"],"import React, { Component } from \"react\";\nimport Display from \"./Display\";\n\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n    };\n  }\n  getKitchen () {\n    fetch(\"http://localhost:8080/get/food\", {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    })\n    .then(res => res.json())\n    .then(data => {\n        this.setState({\n            items: data\n        })\n        this.state.items.map(item => {\n            console.log(item.name)\n        })\n    })\n}\n  \n\n  componentDidMount() {\n    this.getKitchen();\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    localStorage.setItem('name', 'something')\n  }\n\n  render() {\n    return(\n      <div>\n        <Display data={this.state.items}/>\n      </div>\n    );\n  }\n}\n\n\n","/home/mahin/projects/go/food-ordering-system-example/client/src/components/Checkout.js",[],"/home/mahin/projects/go/food-ordering-system-example/client/src/components/Styles.js",[],"/home/mahin/projects/go/food-ordering-system-example/client/src/components/Display.js",["100","101","102"],"import { Card, Grid, CardContent, Typography, Button, Fab } from '@material-ui/core';\nimport { useHistory } from \"react-router\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport AddIcon from '@material-ui/icons/Add';\n\n\n\nconst useStyles = makeStyles({\n  root: {\n    // maxWidth: 345,\n    marginBottom: 20,\n    marginRight: 20\n  },\n});\n\n\nconst Display = (props) => {\n    const history = useHistory();\n    const classes = useStyles();\n\n    const [count, setCount] = React.useState(1);\n\n    function onSubmit(props) {\n      console.log(props)\n      fetch(\"http://localhost:8080/post/order\",{\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(props)\n      })\n    }\n\n    function checkout() {\n      console.log(\"yes\")\n      history.push(\"/checkout\")\n    }\n\n\n\n    return (\n      <Grid container>\n        <Grid item xs={8}><h1>Hey, {localStorage.user_name}</h1></Grid>\n        <Grid item xs={4}><Button onClick={()=>checkout()}\n                type=\"submit\"\n                variant=\"contained\"\n              >\n                Checkout\n          </Button></Grid>\n        {props.data.map(item => (\n          \n            <Grid item xs={4}>\n              <Card className={classes.root}>\n              <CardActionArea >\n                {/* <CardMedia\n                  component=\"img\"\n                  alt=\"Contemplative Reptile\"\n                  height=\"140\"\n                  image=\"/static/images/cards/contemplative-reptile.jpg\"\n                  title=\"Contemplative Reptile\"\n                /> */}  \n              </CardActionArea>\n              <CardActions >\n                <CardContent>{item.title}</CardContent>\n                <CardContent>Tk. {item.price}</CardContent>\n                <Fab size=\"small\" color=\"secondary\" aria-label=\"add\" className={classes.margin}>\n                  <AddIcon onClick={ () => {\n                    let order = \n                      {\"user_id\" : parseInt(localStorage.getItem(\"user_id\")),\n                        \"food_id\": item.id\n                      } \n                      onSubmit(order)\n                    }\n                  } \n                  />\n                </Fab>\n              </CardActions>\n            </Card>\n          </Grid>\n        \n        ))}\n      </Grid>\n    );\n}\n\nexport default Display;\n\n\n",{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":41,"nodeType":"109","messageId":"110","endLine":1,"endColumn":47},{"ruleId":"107","severity":1,"message":"108","line":1,"column":41,"nodeType":"109","messageId":"110","endLine":1,"endColumn":47},{"ruleId":"107","severity":1,"message":"111","line":4,"column":18,"nodeType":"109","messageId":"110","endLine":4,"endColumn":22},{"ruleId":"107","severity":1,"message":"112","line":10,"column":8,"nodeType":"109","messageId":"110","endLine":10,"endColumn":11},{"ruleId":"107","severity":1,"message":"113","line":12,"column":10,"nodeType":"109","messageId":"110","endLine":12,"endColumn":20},{"ruleId":"107","severity":1,"message":"114","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"115","line":22,"column":7,"nodeType":"109","messageId":"110","endLine":22,"endColumn":11},{"ruleId":"107","severity":1,"message":"116","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"117","line":4,"column":41,"nodeType":"109","messageId":"110","endLine":4,"endColumn":45},{"ruleId":"107","severity":1,"message":"118","line":4,"column":47,"nodeType":"109","messageId":"110","endLine":4,"endColumn":51},{"ruleId":"107","severity":1,"message":"119","line":4,"column":53,"nodeType":"109","messageId":"110","endLine":4,"endColumn":64},{"ruleId":"107","severity":1,"message":"120","line":4,"column":66,"nodeType":"109","messageId":"110","endLine":4,"endColumn":77},{"ruleId":"107","severity":1,"message":"121","line":18,"column":9,"nodeType":"109","messageId":"110","endLine":18,"endColumn":13},{"ruleId":"107","severity":1,"message":"112","line":1,"column":89,"nodeType":"109","messageId":"110","endLine":1,"endColumn":92},{"ruleId":"107","severity":1,"message":"114","line":2,"column":17,"nodeType":"109","messageId":"110","endLine":2,"endColumn":25},{"ruleId":"107","severity":1,"message":"113","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":20},{"ruleId":"107","severity":1,"message":"122","line":3,"column":22,"nodeType":"109","messageId":"110","endLine":3,"endColumn":41},{"ruleId":"123","severity":1,"message":"124","line":24,"column":35,"nodeType":"125","messageId":"126","endLine":24,"endColumn":37},{"ruleId":"107","severity":1,"message":"127","line":1,"column":35,"nodeType":"109","messageId":"110","endLine":1,"endColumn":45},{"ruleId":"107","severity":1,"message":"128","line":24,"column":12,"nodeType":"109","messageId":"110","endLine":24,"endColumn":17},{"ruleId":"107","severity":1,"message":"129","line":24,"column":19,"nodeType":"109","messageId":"110","endLine":24,"endColumn":27},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'data' is defined but never used.","'Box' is defined but never used.","'makeStyles' is defined but never used.","'useState' is defined but never used.","'user' is assigned a value but never used.","'useEffect' is defined but never used.","'Card' is defined but never used.","'Grid' is defined but never used.","'CardContent' is defined but never used.","'CardActions' is defined but never used.","'food' is assigned a value but never used.","'responsiveFontSizes' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Typography' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]