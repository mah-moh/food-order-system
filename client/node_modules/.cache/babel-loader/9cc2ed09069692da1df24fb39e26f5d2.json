{"ast":null,"code":"var _jsxFileName = \"/home/mahin/projects/go/cloud-kitchen-example/client/src/components/Manage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport { Container, Typography, Button, Card, Grid, CardContent, CardActions } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1)\n    }\n  },\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n}));\nexport default function Manage() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  const food = [];\n\n  const bull = /*#__PURE__*/_jsxDEV(\"span\", {\n    className: classes.bullet,\n    children: \"\\u2022\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 16\n  }, this);\n\n  const onSubmit = data => {\n    fetch(\"http://localhost:8080/add/food\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      alert(\"Added\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: \"Add today's menu:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.root,\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"eg:burger\",\n        name: \"title\",\n        ...register('title'),\n        inputProps: {\n          'aria-label': 'description'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"eg:100\\u09F3\",\n        name: \"price\",\n        ...register('price'),\n        inputProps: {\n          'aria-label': 'description'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        variant: \"outlined\",\n        children: [/*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.title,\n            color: \"textSecondary\",\n            gutterBottom: true,\n            children: fetch(\"http:/localhost:8080/api/order\", {\n              method: \"GET\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            }).then(res => res.json()).then(data => data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            component: \"h2\",\n            children: [\"be\", bull, \"nev\", bull, \"o\", bull, \"lent\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.pos,\n            color: \"textSecondary\",\n            children: \"adjective\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            component: \"p\",\n            children: [\"well meaning and kindly.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), '\"a benevolent smile\"']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            children: \"Learn More\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Manage, \"VT4JlSyPC0t0yh7aHXNBpS0dQJ4=\", false, function () {\n  return [useStyles, useForm];\n});\n\n_c = Manage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Manage\");","map":{"version":3,"sources":["/home/mahin/projects/go/cloud-kitchen-example/client/src/components/Manage.js"],"names":["React","useEffect","makeStyles","Input","Container","Typography","Button","Card","Grid","CardContent","CardActions","useForm","useStyles","theme","root","margin","spacing","minWidth","bullet","display","transform","title","fontSize","pos","marginBottom","Manage","classes","register","handleSubmit","food","bull","onSubmit","data","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","alert"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport { Container, Typography, Button, Card, Grid, CardContent, CardActions } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  root: {\n    minWidth: 275,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n\n}));\n\nexport default function Manage() {\n  const classes = useStyles();\n  const { register, handleSubmit } = useForm();\n  const food = []\n  const bull = <span className={classes.bullet}>•</span>;\n\n\n  const onSubmit = (data) => {\n      fetch(\"http://localhost:8080/add/food\",{\n          method:\"POST\",\n          headers: {\n              \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n      })\n      .then(res => res.json())\n      .then(data => { \n          console.log(data)\n          alert(\"Added\")\n      })\n  }\n\n\n  return (\n    <Container>\n        <Typography>Add today's menu:</Typography>\n        <form className={classes.root} noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n            <Input placeholder=\"eg:burger\" name=\"title\" {...register('title')} inputProps={{ 'aria-label': 'description' }} />\n            <Input placeholder=\"eg:100৳\" name=\"price\" {...register('price')} inputProps={{ 'aria-label': 'description' }} />\n            <Button\n                type=\"submit\"\n                variant=\"contained\"\n              >\n            Add\n          </Button>\n        </form>\n        <Grid xs={12} >\n                <Card className={classes.root} variant=\"outlined\">\n              <CardContent>\n                <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n                  {fetch(\"http:/localhost:8080/api/order\", {\n                    method: \"GET\",\n                    headers: {\"Content-Type\":\"application/json\" },\n                  })\n                  .then(res => res.json())\n                  .then(data => data)\n                  }\n                </Typography>\n                <Typography variant=\"h5\" component=\"h2\">\n                  be{bull}nev{bull}o{bull}lent\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                  adjective\n                </Typography>\n                <Typography variant=\"body2\" component=\"p\">\n                  well meaning and kindly.\n                  <br />\n                  {'\"a benevolent smile\"'}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\">Learn More</Button>\n              </CardActions>\n            </Card>\n             </Grid>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}