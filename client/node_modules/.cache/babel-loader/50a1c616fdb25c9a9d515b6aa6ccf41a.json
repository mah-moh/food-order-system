{"ast":null,"code":"var _jsxFileName = \"/home/mahin/projects/go/cloud-kitchen-example/client/src/components/SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './Styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet user = {};\n\nfunction SignIn() {\n  _s();\n\n  const classes = useStyles();\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n  let history = useHistory();\n\n  const onSubmit = data => {\n    fetch(\"http://localhost:8080/signin\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      user = data;\n\n      if (data.isManager === \"true\") {\n        history.push({\n          pathname: \"/manage\",\n          state: {\n            details: data\n          }\n        });\n      } else {\n        history.push({\n          pathname: '/home',\n          state: {\n            detail: data\n          }\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit(onSubmit),\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          ...register('email'),\n          fullWidth: true,\n          id: \"email\",\n          label: \"Email Address\",\n          name: \"email\",\n          autoComplete: \"email\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          margin: \"normal\",\n          required: true,\n          ...register('password'),\n          fullWidth: true,\n          name: \"password\",\n          label: \"Password\",\n          type: \"password\",\n          id: \"password\",\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, {\n            value: \"true\",\n            name: \"isManager\",\n            ...register('isManager'),\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 22\n          }, this),\n          label: \"Sign me in as admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              href: \"/\",\n              variant: \"body2\",\n              children: \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"dGwZrM/tFz47zkTXQP3w8K3HXKQ=\", false, function () {\n  return [useStyles, useForm, useHistory];\n});\n\n_c = SignIn;\nexport { SignIn, user };\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"sources":["/home/mahin/projects/go/cloud-kitchen-example/client/src/components/SignIn.js"],"names":["React","useState","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Typography","Container","useForm","useHistory","useStyles","user","SignIn","classes","register","handleSubmit","history","onSubmit","data","fetch","method","headers","body","JSON","stringify","then","response","json","isManager","push","pathname","state","details","detail","paper","avatar","form","submit"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\nimport useStyles from './Styles';\n\nlet user = {}\n\nfunction SignIn() {\n  const classes = useStyles();\n  const { register, handleSubmit } = useForm();\n  let history = useHistory()\n  \n\n  const onSubmit = (data) => {\n\n    fetch(\"http://localhost:8080/signin\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    })\n    .then(response => response.json())\n    .then(data => {\n      user = data\n      if (data.isManager === \"true\"){\n        history.push({\n          pathname: \"/manage\",\n          state: {details: data}\n        })\n      }else{\n        history.push({\n          pathname: '/home',\n          state: {detail: data}\n        })\n      }\n    })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit(onSubmit)} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            {...register('email')}\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            {...register('password')}\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"true\" name=\"isManager\" {...register('isManager')} color=\"primary\" />}\n            label=\"Sign me in as admin\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link href=\"/\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n    </Container>\n  );\n}\n\nexport { SignIn, user };"]},"metadata":{},"sourceType":"module"}